 vector<int> t;
    void build(int v,int tl,int tr,vector<int>& a){
    if(tl==tr){
        t[v]=a[tl];
        return;
    }
    int tm=(tl+tr)/2;
    build(2*v,tl,tm,a);
    build(2*v+1,tm+1,tr,a);
    t[v]=t[2*v]+t[2*v+1];
}
int sum(int v,int tl,int tr,int l,int r){
    if(l>r)return 0;
    if(tl==l && tr==r){
        return t[v];
    }
    int tm=(tl+tr)/2;
    return sum(2*v,tl,tm,l,min(r,tm))+sum(2*v+1,tm+1,tr,max(l,tm+1),r);
}
void update(int v,int tl,int tr,int pos,int val){
    if(tl==tr){
        t[v]=val;
        return;
    }
    int tm=(tl+tr)/2;
    if (pos <= tm)
        update(v*2, tl, tm, pos, val);
    else
        update(v*2+1, tm+1, tr, pos, val);
    t[v] = t[v*2] + t[v*2+1];
}


//t.resize(4*n);
//build(1,0,n-1,nums);
//update(1,0,n-1,index,val);
//sum(1,0,n-1,left,right);
